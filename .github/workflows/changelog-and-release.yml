name: changelog-and-release

on:
  push:
    branches:
      - 'main'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(sed -n 's/^version = "\(.*\)"/\1/p' pyproject.toml)
          VERSION="v$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=VERSION::$VERSION"

      - name: Get Previous Tag
        id: get_previous_tag
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags)
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          echo "::set-output name=PREV_TAG::$PREV_TAG"
    
      - name: Generate Changelog
        id: generate_changelog
        uses: nblagoev/pull-release-notes-action@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          base-ref: ${{ steps.get_previous_tag.outputs.PREV_TAG }}
          head-ref: ${{ github.sha }}

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.get_version.outputs.VERSION }}',
              sha: context.sha
            })
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.generate_changelog.outputs.result }}
          draft: true
